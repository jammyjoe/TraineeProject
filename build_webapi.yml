jobs:
  - job: Build
    displayName: 'Build and Publish'
    steps:
      - task: UseDotNet@2
        displayName: "Use .NET 8.0.x SDK"
        inputs:
          version: 8.0.x
          installationPath: $(Agent.ToolsDirectory)/dotnet

      - task: NuGetToolInstaller@1

      - task: DotNetCoreCLI@2
        displayName: 'Nuget Restore'
        inputs: 
          commands: restore
          nugetConfigPath: $(Build.SourcesDirectory)/NuGet.config ##Check this is correct
          projects: $(Build.SourcesDirectory)/$(solutionName).sln
          feedsToUse: config

      - task: DotNetCoreCLI@2
        displayName: 'Build PokedexAPI'
        inputs:
          command: build
          projects: '$(Build.SourcesDirectory)/${{parameters.apiProjectName}}/${{parameters.apiProjectName}}.csproj'
          arguments: '--configuration Release'

      - task: DotNetCoreCLI@2
        displayName: 'Publish PokedexAPI'
        inputs:
          command: publish
          publishWebProjects: false
          arguments: '--configuration release'
          projects: '$(Build.SourcesDirectory)/${{parameters.apiProjectName}}/${{parameters.apiProjectName}}.csproj'

      # - task: DotNetCoreCLI@2
      #   displayName: 'Run Tests'
      #   inputs:
      #     command: test
      #     projects: $(Build.SourcesDirectory)/${{parameters.apiProjectName}}.Tests/${{parameters.apiProjectName}}.Tests.csproj
      #     arguments: '--no-restore'

      - task: CopyFiles@2
        displayName: 'Copy Artifact to Staging Folder'
        inputs:
          SourceFolder: $(Build.SourcesDirectory)/${{parameters.solutionName}}
          Contents: '**/publish.zip'
          TargetFolder: $(Build.ArtifactStagingDirectory)
          CleanTargetFolder: true
          OverWrite: true
          flattenFolders: true

      # - task: PublishBuildArtifacts@1
      #   displayName: 'Publish Artifact Pokedex Web Api'
      #   inputs:
      #     ArtifactName: ${{parameters.apiProjectName}}